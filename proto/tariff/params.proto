syntax = "proto3";
package noble.tariff;

import "gogoproto/gogo.proto";

option go_package = "github.com/strangelove-ventures/noble/v4/x/tariff/types";
option (gogoproto.equal_all) = true;

// Params defines the set of params for the distribution module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  // share is % of tx fees or rewards allocated to distribution_entities
  string share = 1 [
    (gogoproto.moretags) = "yaml:\"share\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // % of tx fees or rewards allocated to a set of global distribution entities
  // these shares must add up to 1
  repeated DistributionEntity distribution_entities = 2 [
    (gogoproto.moretags) = "yaml:\"distribution_entities\"",
    (gogoproto.nullable) = false
  ];

  repeated TransferFee transfer_fees = 3 [(gogoproto.nullable) = false];
}

// DistributionEntity defines a distribution entity
message DistributionEntity {
  string address = 1;
  string share = 2 [
    (gogoproto.moretags) = "yaml:\"share\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// TransferFee defines the fee configuration for a specific denom.
message TransferFee {
  string bps = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string max = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string denom = 3;
}
